{"version":3,"sources":["webentry.js"],"names":["define","Deferred","filer","webentry","one","entry","path","d","onError","e","reject","isFile","file","relativePath","resolve","isDirectory","dirReader","createReader","readEntries","entries","all","name","then","files","promise","langx","map","concat","apply","arguments"],"mappings":";;;;;;;AAACA,QACG,yBACA,WACF,SAASC,EAAUC,GAClB,GAAIC,GAAW,WACV,QAASC,GAAIC,EAAOC,GAChB,GAAIC,GAAI,GAAIN,GACRO,EAAU,SAASC,GACfF,EAAEG,OAAOD,GAIjB,IADAH,EAAOA,GAAQ,GACXD,EAAMM,OACNN,EAAMO,KAAK,SAASA,GAChBA,EAAKC,aAAeP,EACpBC,EAAEO,QAAQF,IACXJ,OACA,IAAIH,EAAMU,YAAa,CAC1B,GAAIC,GAAYX,EAAMY,cACtBD,GAAUE,YAAY,SAASC,GAC3BC,EACID,EACAb,EAAOD,EAAMgB,KAAO,KACtBC,KAAK,SAASC,GACZhB,EAAEO,QAAQS,KAJdH,SAKSZ,IACVA,OAIHD,GAAEO,WAEN,OAAOP,GAAEiB,QAGb,QAASJ,GAAID,EAASb,GAClB,MAAOL,GAASmB,IACZK,MAAMC,IAAIP,EAAS,SAASd,GACxB,MAAOD,GAAIC,EAAOC,MAExBgB,KAAK,WACH,MAAOK,QAAOC,SAAUC,aAIhC,OACIzB,IAAKA,EACLgB,IAAKA,KAIb,OAAOlB,GAAMC,SAAWA","file":"../webentry.js","sourcesContent":[" define([\r\n    \"skylark-langx/Deferred\",\r\n    \"./filer\"\r\n],function(Deferred, filer){\r\n   var webentry = (function() {\r\n        function one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function(file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function(entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function(files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                langx.map(entries, function(entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function() {\r\n                return concat.apply([], arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one: one,\r\n            all: all\r\n        };\r\n    })();\r\n\r\n    return filer.webentry = webentry;\r\n});"]}