{"version":3,"sources":["skylark-storages-diskfs-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","diskfs","downlad","data","window","navigator","msSaveBlob","types","isString","dataURItoBlob","a","document","createElement","Blob","URL","createObjectURL","href","setAttribute","dispatchEvent","CustomEvent","class2type","toString","type","forEach","toLowerCase","String","call","isEmptyObject","isFunction","value","isHtmlNode","nodeType","isNumber","isObject","isWindow","isArray","object","constructor","Array","isArrayLike","isBoolean","isDefined","isDocument","DOCUMENT_NODE","isEmpty","isNull","isNumeric","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","undefined","objects","filter","baseFindIndex","array","predicate","fromIndex","fromRight","index","baseIsNaN","flatten","result","item","j","push","baseIndexOf","compact","first","items","n","slice","func","inArray","indexOf","makeArray","offset","startWith","concat","merge","second","l","arr","fn","map","elements","callback","key","values","reduce","initialValue","uniq","idx","INFINITY","MAX_INTEGER","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toFinite","toNumber","sign","other","valueOf","replace","isBinary","test","toInteger","remainder","numbers","eq","deepEq","hasOwnProperty","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","has","_mixin","target","source","deep","safe","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","b","aStack","bStack","className","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","each","undef","extend","arg","isEqual","includes","collection","guard","nativeMax","isMatch","attrs","omit","prop1","prop2","pn","pick","removeItem","splice","fallback","prop","safeMixin","delegate","TMP","props","tmp","templateSettings","evaluate","interpolate","escape","debounce","wait","timeout","context","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","noop","proxy","unshift","TypeError","returnTrue","returnFalse","template","text","settings","oldSettings","render","matcher","RegExp","noMatch","join","match","escapeRegExp","escapeChar","variable","Function","e","_","argument","arrays","funcs","PGLISTENERS","PGNOTIFIES","Promise","always","handler","then","done","fail","catch","Deferred","self","p","promise","resolve","reject","_resolve","_reject","wrapPromise","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","__ctx__","pipe","resolveWith","_resolved","notify","listener","error","reason","rejectWith","_rejected","errback","progback","all","bind","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","dom","createClass","_constructor","_construct","init","parent","mixins","options","innerParent","ctor","Error","clss","superclass","cls","clsMixines","serialMixins","newCtor","xtor","create","__proto__","__mixin__","mergeMixins","klassName","__mixins__","partial","proto","_super","noOverrided","overrides","superFn","overrided","ret","defineProperty","extendClass","inherit","f1","klass","QueryResults","results","isPromise","addIterativeMethod","method","total","ArrayStore","queryEngine","query","queryObject","required","execute","thisObject","out","cache","buildFn","sortSet","sort","aValue","attribute","bValue","descending","start","count","Infinity","matches","idProperty","get","id","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","nextId","aspect","methodName","advice","receiveArguments","dispatcher","existing","executionId","before","next","around","after","newResults","signal","previous","advised","advise","async","parallel","ctx","rets","series","waterful","parseMilliSeconds","str","strs","number","isNaN","trim","parse","event","segs","Evented","on","events","selector","one","_hub","parsed","trigger","eventName","listeners","len","reCompact","listened","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","hoster","isBrowser","isNode","global","browser","node","process","versions","v8","_document","w","require","matched","ua","exec","version","uaMatch","userAgent","chrome","webkit","safari","idCounter","camelCase","toUpperCase","dasherize","deserializeValue","JSON","lowerFirst","charAt","serializeValue","stringify","substitute","transform","getObject","retVal","getValue","_k","reverse","v","format","uniqueId","prefix","upperFirst","getAbsoluteUrl","url","Xhr","jsonpID","rscript","scriptTypeRE","xmlTypeRE","jsonType","htmlType","blankRE","XhrDefaultOptions","beforeSend","success","complete","accepts","script","json","xml","html","crossDomain","processData","xhrFields","withCredentials","mimeToDataType","mime","appendQuery","serializeData","param","traditional","serialize","scope","t","hash","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","strings","Restful","idAttribute","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","Stateful","attributes","cid","cidPrefix","set","changed","validationError","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","hub","publish","arg1","argn","subscribe","datetimes","topic","_uid","langx","createEvent","funcArg","payload","getQueryParams","queryParam","nv","toPixel","parseFloat","uid","webkitURL","every","maybeAddPx","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","svg","baseVal","elementDisplay","getStyles","elem","view","ownerDocument","defaultView","opener","getComputedStyle","styler","autocssfix","cssHooks","addClass","elm","names","re","css","property","computedStyle","style","getPropertyValue","removeProperty","cssText","disabled","hasClass","hide","isInvisible","removeClass","show","nodeName","element","display","body","appendChild","parentNode","removeChild","defaultDisplay","toggleClass","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","cssPropName","isIE","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","support","end","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","ensureNodes","nodes","copyByClone","cloneNode","append","placing","tag","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","noder","active","doc","el","activeElement","blur","getAttribs","setAttrib","getAttrib","contents","chkName","contentDocument","childNodes","createFragment","$1","container","innerHTML","child","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","closest","visible","isInDocument","offsetParent","ownerWindow","parentWindow","refNode","nextSibling","insertBefore","prepend","console","warn","children","oldNode","replaceChild","throb","timer","time","throbber","class","overlayDiv","position","top","left","width","height","zIndex","overlay","textNode","nodeValue","traverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","velm","local","nativeMatchesSelector","separatorIndex","combinatorIndex","reversed","from","reverseCache","reUnescape","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","cexp","string","rawMatch","separator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","operator","rinputs","rheader","parseSelector","button","checked","enabled","even","focus","tabindex","gt","sel","find","header","hidden","input","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","isArrayFilter","radio","checkbox","file","image","submit","reset","ancestors","root","rootIsSelector","descendants","querySelectorAll","matchError","descendant","querySelector","lastChild","previousSibling","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","getElementById","findAll","capitalRE","propMap","readonly","for","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","attrName","_store","confirm","store","_attributeData","_setData","dataAttrName","camelName","_getData","cleanData","pluck","datax","dataName","aria","removeAttr","removeAttribute","removeData","removeProp","txt","textContent","multiple","selectedOptions","option","ignoreProperties","eventMethods","preventDefault","stopImmediatePropagation","stopPropagation","readyRE","compatible","isDefaultPrevented","sourceMethod","EventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","getEventCtor","createProxy","originalEvent","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","_args","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","addEventListener","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","unregister","findHandler","ready","readyState","keyCodeLookup","backspace","comma","down","enter","home","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","keyCode","charCode","pattern","shortcutKey","setting","charCodeAt","regKey","special","stop","evented","Event","webentry","entry","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","entries","files","dropzone","hoverClass","droppedCallback","dropped","enterdCount","dataTransfer","webkitGetAsEntry","getAsEntry","pastezone","pastedCallback","pasted","clipboardData","getAsFile","fileInput","maxFileSize","directory","fileSelected","picked","selectFiles","pickedFiles","size","onchange","webkitEntries","webkitdirectory","picker","read","readFile","reader","FileReader","onload","onerror","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","upload","xoptions","contentRange","paramName","singleFileUploads","limitMultiFileUploads","limitMultiFileUploadSize","limitMultiFileUploadSizeOverhead","sequentialUploads","limitConcurrentUploads","multipart","maxChunkSize","uploadedBytes","recalculateProgress","progressInterval","bitrateInterval","autoUpload","messages","i18n","formData","form","serializeArray","fileupload","blobSlice","webkitSlice","mozSlice","ajax","initXHRData","o","blob","uploadName","encodeURI","chunkedUpload","testOnly","jqXHR","fs","ub","mcs","dfd","_getXHRPromise","currentLoaded","_progress","loaded","chunkSize","textStatus","range","upperBytesPos","getUploadedBytes","lengthComputable","errorThrown","_bitrateTimer","timestamp","Date","now","getTime","bitrate","getBitrate","interval","timeDiff","jqXhr","cachedScrollbarWidth","px","scrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","bottom","s","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","clientSize","dimension","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","max","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","me","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","geom","contentRect","cs","marginRect","pageRect","round","scrollIntoView","align","x","y","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","abs","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseCss","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","flip","newOverLeft","myOffset","my","elemWidth","atOffset","at","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","dir","feedback","horizontal","vertical","important","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","supportedTransforms","cssReset","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","fx","speeds","normal","eace","clientLeft","scrollToTop","speed","scale","scrollFrom","freq","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","slideDown","visibility","overflow","slideUp","queue","fast","slow","emulateTransitionEnd","called","fadeToggle","ceasing","allback","slideToggle","toggle","isQ","some","rquickExpr","wrapper_map","wrapper_selector","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","wrapper_name_value","wrapper_value","newValue","NodeList","toArray","excludes","parents","parentsUntil","util","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","wrapper_some_chk","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","wrapper_node_operation","argType","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","replaceClass","newClass","oldClass","disableSelection","enableSelection","plugin","returnValue","plugins","instantiate","FileUploader","dropZone","pasteZone","postMessage","_specialOptions","_BitrateTimer","_getTotal","_initProgressObject","_initResponseObject","_response","_onProgress","_time","floor","_trigger","delegatedEvent","_getParamName","_getDeferredState","_enhancePromise","resolveOrReject","_addConvenienceMethods","getPromise","resolveFunc","rejectFunc","_processQueue","_onSend","processing","_beforeSend","_active","_onDone","_onFail","_onAlways","jqXHRorResult","jqXHRorError","_sending","_onAdd","paramNameSet","paramNameSlice","fileSet","filesLength","limit","limitSize","overhead","batchSize","originalFiles","newData","_initEventHandlers","_destroyEventHandlers","_setOption","reinit","_initSpecialOptions","_elm","_getRegExp","modifiers","_isRegExpOption","_slots","_sequence","uploader","fuInst","typ","main"],"mappings":"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","file":"../skylark-storages-diskfs-all.js","sourcesContent":["define('skylark-langx/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx/skylark',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-storages-diskfs/diskfs',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var diskfs = function() {\r\n        return diskfs;\r\n    };\r\n\r\n    return skylark.attach(\"storages.diskfs\", diskfs);\r\n});\ndefine('skylark-storages-diskfs/download',[\r\n    \"./diskfs\"\r\n],function(diskfs){\r\n\r\n    function downloadFile(data, name) {\r\n        if (window.navigator.msSaveBlob) {\r\n            if (types.isString(data)) {\r\n                data = dataURItoBlob(data);\r\n            }\r\n            window.navigator.msSaveBlob(data, name);\r\n        } else {\r\n            var a = document.createElement('a');\r\n            if (data instanceof Blob) {\r\n                data = URL.createObjectURL(data);\r\n            }\r\n            a.href = data;\r\n            a.setAttribute('download', name || 'noname');\r\n            a.dispatchEvent(new CustomEvent('click'));\r\n        }\r\n    }\r\n\r\n    return diskfs.downlad = downloadFile;\r\n\r\n});\r\n\ndefine('skylark-langx/types',[\r\n],function(){\r\n    var toString = {}.toString;\r\n    \r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && obj.nodeType; // obj instanceof Node; //Consider the elements in IFRAME\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNull(value) {\r\n      return type(value) === \"null\";\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    function isUndefined(value) {\r\n      return value === undefined\r\n    }\r\n\r\n    return {\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNull: isNull,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isNumeric: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    };\r\n\r\n});\ndefine('skylark-langx/arrays',[\r\n\t\"./types\"\r\n],function(types,objects){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function filter2(array,func) {\r\n      return filter.call(array,func);\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n    function forEach (arr, fn) {\r\n      if (arr.forEach) return arr.forEach(fn)\r\n      for (var i = 0; i < arr.length; i++) fn(arr[i], i);\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n\r\n    function merge( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n\r\n    function reduce(array,callback,initialValue) {\r\n        return Array.prototype.reduce.call(array,callback,initialValue);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return {\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        filter : filter2,\r\n        \r\n        flatten: flatten,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        merge : merge,\r\n\r\n        forEach : forEach,\r\n\r\n        map : map,\r\n        \r\n        reduce : reduce,\r\n\r\n        uniq : uniq\r\n\r\n    }\r\n});\ndefine('skylark-langx/numbers',[\r\n\t\"./types\"\r\n],function(types){\r\n\tvar isObject = types.isObject,\r\n\t\tisSymbol = types.isSymbol;\r\n\r\n\tvar INFINITY = 1 / 0,\r\n\t    MAX_SAFE_INTEGER = 9007199254740991,\r\n\t    MAX_INTEGER = 1.7976931348623157e+308,\r\n\t    NAN = 0 / 0;\r\n\r\n\t/** Used to match leading and trailing whitespace. */\r\n\tvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n\t/** Used to detect bad signed hexadecimal string values. */\r\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n\t/** Used to detect binary string values. */\r\n\tvar reIsBinary = /^0b[01]+$/i;\r\n\r\n\t/** Used to detect octal string values. */\r\n\tvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n\t/** Used to detect unsigned integer values. */\r\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n\t/** Built-in method references without a dependency on `root`. */\r\n\tvar freeParseInt = parseInt;\r\n\r\n\t/**\r\n\t * Converts `value` to a finite number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.12.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted number.\r\n\t * @example\r\n\t *\r\n\t * _.toFinite(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toFinite(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toFinite(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toFinite('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toFinite(value) {\r\n\t  if (!value) {\r\n\t    return value === 0 ? value : 0;\r\n\t  }\r\n\t  value = toNumber(value);\r\n\t  if (value === INFINITY || value === -INFINITY) {\r\n\t    var sign = (value < 0 ? -1 : 1);\r\n\t    return sign * MAX_INTEGER;\r\n\t  }\r\n\t  return value === value ? value : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `value` to an integer.\r\n\t *\r\n\t * **Note:** This method is loosely based on\r\n\t * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted integer.\r\n\t * @example\r\n\t *\r\n\t * _.toInteger(3.2);\r\n\t * // => 3\r\n\t *\r\n\t * _.toInteger(Number.MIN_VALUE);\r\n\t * // => 0\r\n\t *\r\n\t * _.toInteger(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toInteger('3.2');\r\n\t * // => 3\r\n\t */\r\n\tfunction toInteger(value) {\r\n\t  var result = toFinite(value),\r\n\t      remainder = result % 1;\r\n\r\n\t  return result === result ? (remainder ? result - remainder : result) : 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Converts `value` to a number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.0.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to process.\r\n\t * @returns {number} Returns the number.\r\n\t * @example\r\n\t *\r\n\t * _.toNumber(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toNumber(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toNumber(Infinity);\r\n\t * // => Infinity\r\n\t *\r\n\t * _.toNumber('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toNumber(value) {\r\n\t  if (typeof value == 'number') {\r\n\t    return value;\r\n\t  }\r\n\t  if (isSymbol(value)) {\r\n\t    return NAN;\r\n\t  }\r\n\t  if (isObject(value)) {\r\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n\t    value = isObject(other) ? (other + '') : other;\r\n\t  }\r\n\t  if (typeof value != 'string') {\r\n\t    return value === 0 ? value : +value;\r\n\t  }\r\n\t  value = value.replace(reTrim, '');\r\n\t  var isBinary = reIsBinary.test(value);\r\n\t  return (isBinary || reIsOctal.test(value))\r\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n\t    : (reIsBadHex.test(value) ? NAN : +value);\r\n\t}\r\n\r\n\treturn  {\r\n\t\ttoFinite : toFinite,\r\n\t\ttoNumber : toNumber,\r\n\t\ttoInteger : toInteger\r\n\t}\r\n});\ndefine('skylark-langx/objects',[\r\n    \"./_attach\",\r\n\t\"./types\",\r\n    \"./numbers\"\r\n],function(_attach,types,numbers){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = numbers.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n   // Return a copy of the object without the blacklisted properties.\r\n    function omit(obj, prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = mixin({},obj);\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                delete result[pn];\r\n            }\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n   // Return a copy of the object only containing the whitelisted properties.\r\n    function pick(obj,prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = {};\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                result[pn] = obj[pn];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = allKeys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return {\r\n        allKeys: allKeys,\r\n\r\n        attach : _attach,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,   \r\n\r\n        includes: includes,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        omit: omit,\r\n\r\n        pick: pick,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    };\r\n\r\n\r\n\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(objects,types){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n  var templateSettings = {\r\n    evaluate: /<%([\\s\\S]+?)%>/g,\r\n    interpolate: /<%=([\\s\\S]+?)%>/g,\r\n    escape: /<%-([\\s\\S]+?)%>/g\r\n  };\r\n\r\n\r\n  function template(text, settings, oldSettings) {\r\n    if (!settings && oldSettings) settings = oldSettings;\r\n    settings = objects.defaults({}, settings,templateSettings);\r\n\r\n    // Combine delimiters into one regular expression via alternation.\r\n    var matcher = RegExp([\r\n      (settings.escape || noMatch).source,\r\n      (settings.interpolate || noMatch).source,\r\n      (settings.evaluate || noMatch).source\r\n    ].join('|') + '|$', 'g');\r\n\r\n    // Compile the template source, escaping string literals appropriately.\r\n    var index = 0;\r\n    var source = \"__p+='\";\r\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\r\n      index = offset + match.length;\r\n\r\n      if (escape) {\r\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n      } else if (interpolate) {\r\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n      } else if (evaluate) {\r\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n      }\r\n\r\n      // Adobe VMs need the match returned to produce the correct offset.\r\n      return match;\r\n    });\r\n    source += \"';\\n\";\r\n\r\n    // If a variable is not specified, place data values in local scope.\r\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n      source + 'return __p;\\n';\r\n\r\n    var render;\r\n    try {\r\n      render = new Function(settings.variable || 'obj', '_', source);\r\n    } catch (e) {\r\n      e.source = source;\r\n      throw e;\r\n    }\r\n\r\n    var template = function(data) {\r\n      return render.call(this, data, _);\r\n    };\r\n\r\n    // Provide the compiled source as a convenience for precompilation.\r\n    var argument = settings.variable || 'obj';\r\n    template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n    return template;\r\n  };\r\n\r\n    return {\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        templateSettings : templateSettings,\r\n        template : template\r\n    };\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"./arrays\",\r\n\t\"./funcs\",\r\n    \"./objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners',\r\n         PGNOTIFIES = Symbol ? Symbol() : '__pgnotifies';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n        this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return wrapPromise(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }));\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGNOTIFIES].forEach(function (value) {\r\n                        handler(value);\r\n                    });\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        try {\r\n            this[PGNOTIFIES].push(value);\r\n\r\n            return this[PGLISTENERS].forEach(function (listener) {\r\n                return listener(value);\r\n            });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.done.apply(p,arguments);\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.fail(errback);\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-utils-dom/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils-dom/dom',[\"./skylark\"], function(skylark) {\r\n\treturn skylark.dom = skylark.attach(\"utils.dom\",{});\r\n});\r\n\ndefine('skylark-langx/klass',[\r\n    \"./arrays\",\r\n    \"./objects\",\r\n    \"./types\"\r\n],function(arrays,objects,types){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n\r\n/* for reference \r\n function klass(props,parent) {\r\n    var ctor = function(){\r\n        this._construct();\r\n    };\r\n    ctor.prototype = props;\r\n    if (parent) {\r\n        ctor._proto_ = parent;\r\n        props.__proto__ = parent.prototype;\r\n    }\r\n    return ctor;\r\n}\r\n\r\n// Type some JavaScript code here.\r\nlet animal = klass({\r\n  _construct(){\r\n      this.name = this.name + \",hi\";\r\n  },\r\n    \r\n  name: \"Animal\",\r\n  eat() {         // [[HomeObject]] == animal\r\n    alert(`${this.name} eats.`);\r\n  }\r\n    \r\n    \r\n});\r\n\r\n\r\nlet rabbit = klass({\r\n  name: \"Rabbit\",\r\n  _construct(){\r\n      super._construct();\r\n  },\r\n  eat() {         // [[HomeObject]] == rabbit\r\n    super.eat();\r\n  }\r\n},animal);\r\n\r\nlet longEar = klass({\r\n  name: \"Long Ear\",\r\n  eat() {         // [[HomeObject]] == longEar\r\n    super.eat();\r\n  }\r\n},rabbit);\r\n*/\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided,\r\n                overrides = options && options.overrides || {};\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (types.isPlainObject(prop) && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return createClass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx/aspect',[\r\n],function(){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return {\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    };\r\n});\ndefine('skylark-langx/async',[\r\n    \"./Deferred\",\r\n    \"./objects\"\r\n],function(Deferred,objects){\r\n    var each = objects.each;\r\n    \r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn async;\t\r\n});\ndefine('skylark-langx/datetimes',[],function(){\r\n     function parseMilliSeconds(str) {\r\n\r\n        var strs = str.split(' ');\r\n        var number = parseInt(strs[0]);\r\n\r\n        if (isNaN(number)){\r\n            return 0;\r\n        }\r\n\r\n        var min = 60000 * 60;\r\n\r\n        switch (strs[1].trim().replace(/\\./g, '')) {\r\n            case 'minutes':\r\n            case 'minute':\r\n            case 'min':\r\n            case 'mm':\r\n            case 'm':\r\n                return 60000 * number;\r\n            case 'hours':\r\n            case 'hour':\r\n            case 'HH':\r\n            case 'hh':\r\n            case 'h':\r\n            case 'H':\r\n                return min * number;\r\n            case 'seconds':\r\n            case 'second':\r\n            case 'sec':\r\n            case 'ss':\r\n            case 's':\r\n                return 1000 * number;\r\n            case 'days':\r\n            case 'day':\r\n            case 'DD':\r\n            case 'dd':\r\n            case 'd':\r\n                return (min * 24) * number;\r\n            case 'months':\r\n            case 'month':\r\n            case 'MM':\r\n            case 'M':\r\n                return (min * 24 * 28) * number;\r\n            case 'weeks':\r\n            case 'week':\r\n            case 'W':\r\n            case 'w':\r\n                return (min * 24 * 7) * number;\r\n            case 'years':\r\n            case 'year':\r\n            case 'yyyy':\r\n            case 'yy':\r\n            case 'y':\r\n                return (min * 24 * 365) * number;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n\t\r\n\treturn {\r\n\t\tparseMilliSeconds\r\n\t};\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"./klass\",\r\n    \"./arrays\",\r\n    \"./objects\",\r\n    \"./types\"\r\n],function(klass,arrays,objects,types){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Evented = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    return Evented;\r\n\r\n});\ndefine('skylark-langx/hoster',[\r\n],function(){\r\n\t// The javascript host environment, brower and nodejs are supported.\r\n\tvar hoster = {\r\n\t\t\"isBrowser\" : true, // default\r\n\t\t\"isNode\" : null,\r\n\t\t\"global\" : this,\r\n\t\t\"browser\" : null,\r\n\t\t\"node\" : null\r\n\t};\r\n\r\n\tif (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8) {\r\n\t\thoster.isNode = true;\r\n\t\thoster.isBrowser = false;\r\n\t}\r\n\r\n\thoster.global = (function(){\r\n\t\tif (typeof global !== 'undefined' && typeof global !== 'function') {\r\n\t\t\t// global spec defines a reference to the global object called 'global'\r\n\t\t\t// https://github.com/tc39/proposal-global\r\n\t\t\t// `global` is also defined in NodeJS\r\n\t\t\treturn global;\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\t// window is defined in browsers\r\n\t\t\treturn window;\r\n\t\t}\r\n\t\telse if (typeof self !== 'undefined') {\r\n\t\t\t// self is defined in WebWorkers\r\n\t\t\treturn self;\r\n\t\t}\r\n\t\treturn this;\r\n\t})();\r\n\r\n\tvar _document = null;\r\n\r\n\tObject.defineProperty(hoster,\"document\",function(){\r\n\t\tif (!_document) {\r\n\t\t\tvar w = typeof window === 'undefined' ? require('html-element') : window;\r\n\t\t\t_document = w.document;\r\n\t\t}\r\n\r\n\t\treturn _document;\r\n\t});\r\n\r\n\tif (hoster.isBrowser) {\r\n\t    function uaMatch( ua ) {\r\n\t\t    ua = ua.toLowerCase();\r\n\r\n\t\t    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t      ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t      [];\r\n\r\n\t\t    return {\r\n\t\t      browser: match[ 1 ] || '',\r\n\t\t      version: match[ 2 ] || '0'\r\n\t\t    };\r\n\t  \t};\r\n\r\n\t    var matched = uaMatch( navigator.userAgent );\r\n\r\n\t    var browser = hoster.browser = {};\r\n\r\n\t    if ( matched.browser ) {\r\n\t      browser[ matched.browser ] = true;\r\n\t      browser.version = matched.version;\r\n\t    }\r\n\r\n\t    // Chrome is Webkit, but Webkit is also Safari.\r\n\t    if ( browser.chrome ) {\r\n\t      browser.webkit = true;\r\n\t    } else if ( browser.webkit ) {\r\n\t      browser.safari = true;\r\n\t    }\r\n\t}\r\n\r\n\treturn  hoster;\r\n});\ndefine('skylark-langx/strings',[\r\n],function(){\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\treturn {\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        trim: trim,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t} ; \r\n\r\n});\ndefine('skylark-langx/Xhr',[\r\n    \"./arrays\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./funcs\",\r\n    \"./types\"\r\n],function(arrays,Deferred,Evented,objects,funcs,types){\r\n    var each = objects.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.notify(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn Xhr;\t\r\n});\ndefine('skylark-langx/Restful',[\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./strings\",\r\n    \"./Xhr\"\r\n],function(Evented,objects,strings,Xhr){\r\n    var mixin = objects.mixin,\r\n        substitute = strings.substitute;\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n    });\r\n\r\n    return Restful;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\",\r\n  \"./strings\",\r\n  \"./objects\"\r\n],function(Evented,strings,objects){\r\n    var isEqual = objects.isEqual,\r\n        mixin = objects.mixin,\r\n        result = objects.result,\r\n        isEmptyObject = objects.isEmptyObject,\r\n        clone = objects.clone,\r\n        uniqueId = strings.uniqueId;\r\n\r\n    var Stateful = Evented.inherit({\r\n        _construct : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx/topic',[\r\n\t\"./Evented\"\r\n],function(Evented){\r\n\tvar hub = new Evented();\r\n\r\n\treturn {\r\n\t    publish: function(name, arg1,argn) {\r\n\t        var data = [].slice.call(arguments, 1);\r\n\r\n\t        return hub.trigger({\r\n\t            type : name,\r\n\t            data : data\r\n\t        });\r\n\t    },\r\n\r\n        subscribe: function(name, listener,ctx) {\r\n        \tvar handler = function(e){\r\n                listener.apply(ctx,e.data);\r\n            };\r\n            hub.on(name, handler);\r\n            return {\r\n            \tremove : function(){\r\n            \t\thub.off(name,handler);\r\n            \t}\r\n            }\r\n\r\n        }\r\n\r\n\t}\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./datetimes\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./hoster\",\r\n    \"./klass\",\r\n    \"./numbers\",\r\n    \"./objects\",\r\n    \"./Restful\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./topic\",\r\n    \"./types\",\r\n    \"./Xhr\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,datetimes,Deferred,Evented,funcs,hoster,klass,numbers,objects,Restful,Stateful,strings,topic,types,Xhr) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,datetimes,funcs,numbers,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        hoster : hoster,\r\n\r\n        klass : klass,\r\n\r\n        Restful: Restful,\r\n        \r\n        Stateful: Stateful,\r\n\r\n        topic : topic,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-utils-dom/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils-dom/styler',[\r\n    \"./dom\",\r\n    \"./langx\"\r\n], function(dom, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getStyles(element).getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function getStyles( elem ) {\r\n\r\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n        // IE throws on elements created in popups\r\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n        var view = elem.ownerDocument.defaultView;\r\n\r\n        if ( !view || !view.opener ) {\r\n            view = window;\r\n        }\r\n\r\n        return view.getComputedStyle( elem);\r\n    }\r\n\r\n\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getStyles(elm)\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return dom.styler = styler;\r\n});\ndefine('skylark-utils-dom/browser',[\r\n    \"./dom\",\r\n    \"./langx\"\r\n], function(dom,langx) {\r\n    \"use strict\";\r\n\r\n    var browser = langx.hoster.browser;\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return dom.browser = browser;\r\n});\r\n\ndefine('skylark-utils-dom/noder',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(dom, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = styler.css(elm,\"position\" ),\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n        /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n\r\n            throbber = this.createElement(\"div\", {\r\n                \"class\": params.className || \"throbber\"\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                \"class\": 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                \"class\": \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        if (params.style) {\r\n            styler.css(throbber,params.style);\r\n        }\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isInDocument: isInDocument,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return dom.noder = noder;\r\n});\ndefine('skylark-utils-dom/finder',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(dom, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (langx.isArrayLike(root)) {\r\n                    if (langx.inArray(node,root)>-1) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n            ret.push(node); // TODO\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return dom.finder = finder;\r\n});\ndefine('skylark-utils-dom/datax',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(dom, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (names) {\r\n            if (langx.isString(names)) {\r\n                names = names.split(/\\s+/);\r\n            }\r\n            var store = _store(elm, true);\r\n            names.forEach(function(name) {\r\n                delete store[name];\r\n            });            \r\n        } else {\r\n            cleanData(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return dom.datax = datax;\r\n});\ndefine('skylark-utils-dom/eventer',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(dom, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return dom.eventer = eventer;\r\n});\n define('skylark-storages-diskfs/webentry',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"./diskfs\"\r\n],function(arrays,Deferred, diskfs){\r\n    var concat = Array.prototype.concat;\r\n    var webentry = (function() {\r\n        function one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function(file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function(entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function(files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                arrays.map(entries, function(entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function() {\r\n                return concat.apply([], arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one: one,\r\n            all: all\r\n        };\r\n    })();\r\n\r\n    return diskfs.webentry = webentry;\r\n});\n  define('skylark-storages-diskfs/dropzone',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"skylark-utils-dom/styler\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"./diskfs\",\r\n    \"./webentry\"\r\n],function(arrays,Deferred, styler, eventer, diskfs, webentry){  /*\r\n     * Make the specified element to could accept HTML5 file drag and drop.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        eventer.on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n                enterdCount++;\r\n                styler.addClass(elm, hoverClass)\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                enterdCount--\r\n                if (enterdCount == 0) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                styler.removeClass(elm, hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                            items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            arrays.map(items, function(item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n     return diskfs.dropzone = dropzone;\r\n});\ndefine('skylark-storages-diskfs/pastezone',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"./diskfs\"\r\n],function(objects, eventer, diskfs){\r\n    function pastezone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        eventer.on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                objects.each(items, function(index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    return diskfs.pastezone = pastezone;\r\n\r\n});\r\n\ndefine('skylark-storages-diskfs/select',[\r\n    \"./diskfs\"\r\n],function(diskfs){\r\n    var fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false,\r\n            multiple = params.multiple || false,\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\";\r\n            input.style.left = 0;\r\n            input.style.top = 0;\r\n            input.style.opacity = .001;\r\n            document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    return diskfs.select = select;\r\n});\r\n\r\n\ndefine('skylark-storages-diskfs/picker',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"./diskfs\",\r\n    \"./select\",\r\n],function(objects, eventer, diskfs, select){\r\n    /*\r\n     * Make the specified element to pop-up the file selection dialog box when clicked , and read the contents the files selected from client file system by user.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function picker(elm, params) {\r\n        eventer.on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    return diskfs.picker = picker;\r\n\r\n});\r\n\r\n\r\n\ndefine('skylark-storages-diskfs/read',[\r\n    \"skylark-langx/Deferred\",\r\n    \"./diskfs\"\r\n],function(Deferred, diskfs){\r\n\r\n    function readFile(file, params) {\r\n        params = params || {};\r\n        var d = new Deferred,\r\n            reader = new FileReader();\r\n\r\n        reader.onload = function(evt) {\r\n            d.resolve(evt.target.result);\r\n        };\r\n        reader.onerror = function(e) {\r\n            var code = e.target.error.code;\r\n            if (code === 2) {\r\n                alert('please don\\'t open this page using protocol fill:///');\r\n            } else {\r\n                alert('error code: ' + code);\r\n            }\r\n        };\r\n\r\n        if (params.asArrayBuffer) {\r\n            reader.readAsArrayBuffer(file);\r\n        } else if (params.asDataUrl) {\r\n            reader.readAsDataURL(file);\r\n        } else if (params.asText) {\r\n            reader.readAsText(file);\r\n        } else {\r\n            reader.readAsArrayBuffer(file);\r\n        }\r\n\r\n        return d.promise;\r\n    }\r\n\r\n    return diskfs.read = diskfs.readFile = readFile;\r\n    \r\n});\r\n\ndefine('skylark-storages-diskfs/upload',[\r\n\t\"skylark-langx/types\",\r\n\t\"skylark-langx/objects\",\r\n\t\"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n\t\"skylark-langx/Xhr\",\r\n\t\"./diskfs\"\r\n],function(types, objects, arrays, Deferred,Xhr, diskfs){\r\n\r\n    function upload(params) {\r\n        var xoptions = objects.mixin({\r\n            contentRange: null, //\r\n\r\n            // The parameter name for the file form data (the request argument name).\r\n            // If undefined or empty, the name property of the file input field is\r\n            // used, or \"files[]\" if the file input name property is also empty,\r\n            // can be a string or an array of strings:\r\n            paramName: undefined,\r\n            // By default, each file of a selection is uploaded using an individual\r\n            // request for XHR type uploads. Set to false to upload file\r\n            // selections in one request each:\r\n            singleFileUploads: true,\r\n            // To limit the number of files uploaded with one XHR request,\r\n            // set the following option to an integer greater than 0:\r\n            limitMultiFileUploads: undefined,\r\n            // The following option limits the number of files uploaded with one\r\n            // XHR request to keep the request size under or equal to the defined\r\n            // limit in bytes:\r\n            limitMultiFileUploadSize: undefined,\r\n            // Multipart file uploads add a number of bytes to each uploaded file,\r\n            // therefore the following option adds an overhead for each file used\r\n            // in the limitMultiFileUploadSize configuration:\r\n            limitMultiFileUploadSizeOverhead: 512,\r\n            // Set the following option to true to issue all file upload requests\r\n            // in a sequential order:\r\n            sequentialUploads: false,\r\n            // To limit the number of concurrent uploads,\r\n            // set the following option to an integer greater than 0:\r\n            limitConcurrentUploads: undefined,\r\n            // By default, XHR file uploads are sent as multipart/form-data.\r\n            // The iframe transport is always using multipart/form-data.\r\n            // Set to false to enable non-multipart XHR uploads:\r\n            multipart: true,\r\n            // To upload large files in smaller chunks, set the following option\r\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n            // or the browser does not support the required Blob API, files will\r\n            // be uploaded as a whole.\r\n            maxChunkSize: undefined,\r\n            // When a non-multipart upload or a chunked multipart upload has been\r\n            // aborted, this option can be used to resume the upload by setting\r\n            // it to the size of the already uploaded bytes. This option is most\r\n            // useful when modifying the options object inside of the \"add\" or\r\n            // \"send\" callbacks, as the options are cloned for each file upload.\r\n            uploadedBytes: undefined,\r\n            // By default, failed (abort or error) file uploads are removed from the\r\n            // global progress calculation. Set the following option to false to\r\n            // prevent recalculating the global progress data:\r\n            recalculateProgress: true,\r\n            // Interval in milliseconds to calculate and trigger progress events:\r\n            progressInterval: 100,\r\n            // Interval in milliseconds to calculate progress bitrate:\r\n            bitrateInterval: 500,\r\n            // By default, uploads are started automatically when adding files:\r\n            autoUpload: true,\r\n\r\n            // Error and info messages:\r\n            messages: {\r\n                uploadedBytes: 'Uploaded bytes exceed file size'\r\n            },\r\n\r\n            // Translation function, gets the message key to be translated\r\n            // and an object with context specific data as arguments:\r\n            i18n: function(message, context) {\r\n                message = this.messages[message] || message.toString();\r\n                if (context) {\r\n                    objects.each(context, function(key, value) {\r\n                        message = message.replace('{' + key + '}', value);\r\n                    });\r\n                }\r\n                return message;\r\n            },\r\n\r\n            // Additional form data to be sent along with the file uploads can be set\r\n            // using this option, which accepts an array of objects with name and\r\n            // value properties, a function returning such an array, a FormData\r\n            // object (for XHR file uploads), or a simple object.\r\n            // The form of the first fileInput is given as parameter to the function:\r\n            formData: function(form) {\r\n                return form.serializeArray();\r\n            },\r\n\r\n            // The add callback is invoked as soon as files are added to the fileupload\r\n            // widget (via file input selection, drag & drop, paste or add API call).\r\n            // If the singleFileUploads option is enabled, this callback will be\r\n            // called once for each file in the selection for XHR file uploads, else\r\n            // once for each file selection.\r\n            //\r\n            // The upload starts when the submit method is invoked on the data parameter.\r\n            // The data object contains a files property holding the added files\r\n            // and allows you to override plugin options as well as define ajax settings.\r\n            //\r\n            // Listeners for this callback can also be bound the following way:\r\n            // .bind('fileuploadadd', func);\r\n            //\r\n            // data.submit() returns a Promise object and allows to attach additional\r\n            // handlers using jQuery's Deferred callbacks:\r\n            // data.submit().done(func).fail(func).always(func);\r\n            add: function(e, data) {\r\n                if (e.isDefaultPrevented()) {\r\n                    return false;\r\n                }\r\n                if (data.autoUpload || (data.autoUpload !== false &&\r\n                        $(this).fileupload('option', 'autoUpload'))) {\r\n                    data.process().done(function() {\r\n                        data.submit();\r\n                    });\r\n                }\r\n            },\r\n\r\n            // Other callbacks:\r\n\r\n            // Callback for the submit event of each file upload:\r\n            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);\r\n\r\n            // Callback for the start of each file upload request:\r\n            // send: function (e, data) {}, // .bind('fileuploadsend', func);\r\n\r\n            // Callback for successful uploads:\r\n            // done: function (e, data) {}, // .bind('fileuploaddone', func);\r\n\r\n            // Callback for failed (abort or error) uploads:\r\n            // fail: function (e, data) {}, // .bind('fileuploadfail', func);\r\n\r\n            // Callback for completed (success, abort or error) requests:\r\n            // always: function (e, data) {}, // .bind('fileuploadalways', func);\r\n\r\n            // Callback for upload progress events:\r\n            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);\r\n\r\n            // Callback for global upload progress events:\r\n            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);\r\n\r\n            // Callback for uploads start, equivalent to the global ajaxStart event:\r\n            // start: function (e) {}, // .bind('fileuploadstart', func);\r\n\r\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\r\n            // stop: function (e) {}, // .bind('fileuploadstop', func);\r\n\r\n            // Callback for change events of the fileInput(s):\r\n            // change: function (e, data) {}, // .bind('fileuploadchange', func);\r\n\r\n            // Callback for paste events to the pasteZone(s):\r\n            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);\r\n\r\n            // Callback for drop events of the dropZone(s):\r\n            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);\r\n\r\n            // Callback for dragover events of the dropZone(s):\r\n            // dragover: function (e) {}, // .bind('fileuploaddragover', func);\r\n\r\n            // Callback for the start of each chunk upload request:\r\n            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);\r\n\r\n            // Callback for successful chunk uploads:\r\n            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);\r\n\r\n            // Callback for failed (abort or error) chunk uploads:\r\n            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);\r\n\r\n            // Callback for completed (success, abort or error) chunk upload requests:\r\n            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);\r\n\r\n            // The plugin options are used as settings object for the ajax calls.\r\n            // The following are jQuery ajax settings required for the file uploads:\r\n            processData: false,\r\n            contentType: false,\r\n            cache: false\r\n        }, params);\r\n\r\n        var blobSlice = function() {\r\n                var slice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n  \t            return slice.apply(this, arguments);\r\n            },\r\n            ajax = function(data) {\r\n                return Xhr.request(data.url, data);\r\n            };\r\n\r\n        function initDataSettings(o) {\r\n            o.type = o.type || \"POST\";\r\n\r\n            if (!chunkedUpload(o, true)) {\r\n                if (!o.data) {\r\n                    initXHRData(o);\r\n                }\r\n                //initProgressListener(o);\r\n            }\r\n        }\r\n\r\n        function initXHRData(o) {\r\n            var that = this,\r\n                formData,\r\n                file = o.files[0],\r\n                // Ignore non-multipart setting if not supported:\r\n                multipart = o.multipart,\r\n                paramName = types.type(o.paramName) === 'array' ?\r\n                o.paramName[0] : o.paramName;\r\n\r\n            o.headers = objects.mixin({}, o.headers);\r\n            if (o.contentRange) {\r\n                o.headers['Content-Range'] = o.contentRange;\r\n            }\r\n            if (!multipart) {\r\n                o.headers['Content-Disposition'] = 'attachment; filename=\"' +\r\n                    encodeURI(file.name) + '\"';\r\n                o.contentType = file.type || 'application/octet-stream';\r\n                o.data = o.blob || file;\r\n            } else {\r\n                formData = new FormData();\r\n                if (o.blob) {\r\n                    formData.append(paramName, o.blob, file.name);\r\n                } else {\r\n                    objects.each(o.files, function(index, file) {\r\n                        // This check allows the tests to run with\r\n                        // dummy objects:\r\n                        formData.append(\r\n                            (types.type(o.paramName) === 'array' &&\r\n                                o.paramName[index]) || paramName,\r\n                            file,\r\n                            file.uploadName || file.name\r\n                        );\r\n                    });\r\n                }\r\n                o.data = formData;\r\n            }\r\n            // Blob reference is not needed anymore, free memory:\r\n            o.blob = null;\r\n        }\r\n\r\n        function getTotal(files) {\r\n            var total = 0;\r\n            objects.each(files, function(index, file) {\r\n                total += file.size || 1;\r\n            });\r\n            return total;\r\n        }\r\n\r\n        function getUploadedBytes(jqXHR) {\r\n            var range = jqXHR.getResponseHeader('Range'),\r\n                parts = range && range.split('-'),\r\n                upperBytesPos = parts && parts.length > 1 &&\r\n                parseInt(parts[1], 10);\r\n            return upperBytesPos && upperBytesPos + 1;\r\n        }\r\n\r\n        function initProgressObject(obj) {\r\n            var progress = {\r\n                loaded: 0,\r\n                total: 0,\r\n                bitrate: 0\r\n            };\r\n            if (obj._progress) {\r\n                objects.mixin(obj._progress, progress);\r\n            } else {\r\n                obj._progress = progress;\r\n            }\r\n        }\r\n\r\n        function BitrateTimer() {\r\n            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());\r\n            this.loaded = 0;\r\n            this.bitrate = 0;\r\n            this.getBitrate = function(now, loaded, interval) {\r\n                var timeDiff = now - this.timestamp;\r\n                if (!this.bitrate || !interval || timeDiff > interval) {\r\n                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\r\n                    this.loaded = loaded;\r\n                    this.timestamp = now;\r\n                }\r\n                return this.bitrate;\r\n            };\r\n        }\r\n\r\n        function chunkedUpload(options, testOnly) {\r\n            options.uploadedBytes = options.uploadedBytes || 0;\r\n            var that = this,\r\n                file = options.files[0],\r\n                fs = file.size,\r\n                ub = options.uploadedBytes,\r\n                mcs = options.maxChunkSize || fs,\r\n                slice = blobSlice,\r\n                dfd = new Deferred(),\r\n                promise = dfd.promise,\r\n                jqXHR,\r\n                upload;\r\n            if (!(slice && (ub || mcs < fs)) ||\r\n                options.data) {\r\n                return false;\r\n            }\r\n            if (testOnly) {\r\n                return true;\r\n            }\r\n            if (ub >= fs) {\r\n                file.error = options.i18n('uploadedBytes');\r\n                return this._getXHRPromise(\r\n                    false,\r\n                    options.context, [null, 'error', file.error]\r\n                );\r\n            }\r\n            // The chunk upload method:\r\n            upload = function() {\r\n                // Clone the options object for each chunk upload:\r\n                var o = objects.mixin({}, options),\r\n                    currentLoaded = o._progress.loaded;\r\n                o.blob = slice.call(\r\n                    file,\r\n                    ub,\r\n                    ub + mcs,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                o.chunkSize = o.blob.size;\r\n                // Expose the chunk bytes position range:\r\n                o.contentRange = 'bytes ' + ub + '-' +\r\n                    (ub + o.chunkSize - 1) + '/' + fs;\r\n                // Process the upload data (the blob and potential form data):\r\n                initXHRData(o);\r\n                // Add progress listeners for this chunk upload:\r\n                //initProgressListener(o);\r\n                jqXHR = ajax(o).done(function(result, textStatus, jqXHR) {\r\n                        ub = getUploadedBytes(jqXHR) ||\r\n                            (ub + o.chunkSize);\r\n                        // Create a progress event if no final progress event\r\n                        // with loaded equaling total has been triggered\r\n                        // for this chunk:\r\n                        if (currentLoaded + o.chunkSize - o._progress.loaded) {\r\n                            dfd.progress({\r\n                                lengthComputable: true,\r\n                                loaded: ub - o.uploadedBytes,\r\n                                total: ub - o.uploadedBytes\r\n                            });\r\n                        }\r\n                        options.uploadedBytes = o.uploadedBytes = ub;\r\n                        o.result = result;\r\n                        o.textStatus = textStatus;\r\n                        o.jqXHR = jqXHR;\r\n                        //that._trigger('chunkdone', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        if (ub < fs) {\r\n                            // File upload not yet complete,\r\n                            // continue with the next chunk:\r\n                            upload();\r\n                        } else {\r\n                            dfd.resolveWith(\r\n                                o.context, [result, textStatus, jqXHR]\r\n                            );\r\n                        }\r\n                    })\r\n                    .fail(function(jqXHR, textStatus, errorThrown) {\r\n                        o.jqXHR = jqXHR;\r\n                        o.textStatus = textStatus;\r\n                        o.errorThrown = errorThrown;\r\n                        //that._trigger('chunkfail', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        dfd.rejectWith(\r\n                            o.context, [jqXHR, textStatus, errorThrown]\r\n                        );\r\n                    });\r\n            };\r\n            //this._enhancePromise(promise);\r\n            promise.abort = function() {\r\n                return jqXHR.abort();\r\n            };\r\n            upload();\r\n            return promise;\r\n        }\r\n\r\n        initDataSettings(xoptions);\r\n\r\n        xoptions._bitrateTimer = new BitrateTimer();\r\n\r\n        var jqXhr = chunkedUpload(xoptions) || ajax(xoptions);\r\n\r\n        jqXhr.options = xoptions;\r\n\r\n        return jqXhr;\r\n    }\r\n\r\n\treturn diskfs.upload = upload;\t\r\n});\ndefine('skylark-utils-dom/geom',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(dom, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return dom.geom = geom;\r\n});\ndefine('skylark-utils-dom/fx',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(dom, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function emulateTransitionEnd(elm,duration) {\r\n        var called = false;\r\n        eventer.one(elm,'transitionEnd', function () { \r\n            called = true;\r\n        })\r\n        var callback = function () { \r\n            if (!called) {\r\n                eventer.trigger(elm,'transitionEnd') \r\n            }\r\n        };\r\n        setTimeout(callback, duration);\r\n        \r\n        return this;\r\n    } \r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate,\r\n        emulateTransitionEnd,\r\n        fadeIn,\r\n        fadeOut,\r\n        fadeTo,\r\n        fadeToggle,\r\n        hide,\r\n        scrollToTop,\r\n\r\n        slideDown,\r\n        slideToggle,\r\n        slideUp,\r\n        show,\r\n        toggle\r\n    });\r\n\r\n    return dom.fx = fx;\r\n});\ndefine('skylark-utils-dom/query',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(dom, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function(options) {\r\n                if (!this.length) return\r\n\r\n                if (options) {\r\n                    if (options.of && options.of.length) {\r\n                        options = langx.clone(options);\r\n                        options.of = options.of[0];\r\n                    }\r\n                    return this.each( function() {\r\n                        geom.posit(this,options);\r\n                    });\r\n                } else {\r\n                    var elem = this[0];\r\n\r\n                    return geom.relativePosition(elem);\r\n\r\n                }             \r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n        $.fn.emulateTransitionEnd = wrapper_every_act(fx.emulateTransitionEnd, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    return dom.query = query;\r\n\r\n});\ndefine('skylark-storages-diskfs/uploader',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"skylark-utils-dom/query\",\r\n    \"./diskfs\",\r\n    \"./dropzone\",\r\n    \"./pastezone\",\r\n    \"./picker\",\r\n    \"./upload\"\r\n],function (langx,eventer,$,diskfs,dropzone,pastezone,picker,upload) {\r\n    'use strict';\r\n\r\n    var Deferred = langx.Deferred;\r\n\r\n\r\n    // The fileupload widget listens for change events on file input fields defined\r\n    // via fileInput setting and paste or drop events of the given dropZone.\r\n    // In addition to the default jQuery Widget methods, the fileupload widget\r\n    // exposes the \"add\" and \"send\" methods, to add or directly send files using\r\n    // the fileupload API.\r\n    // By default, files added via file input selection, paste, drag & drop or\r\n    // \"add\" method are uploaded immediately, but it is possible to override\r\n    // the \"add\" callback option to queue file uploads.\r\n\r\n    var FileUploader = langx.Evented.inherit( {\r\n\r\n        options: {\r\n            // The drop target element(s), by the default the complete document.\r\n            // Set to null to disable drag & drop support:\r\n            dropZone: $(document),\r\n\r\n            // The paste target element(s), by the default the complete document.\r\n            // Set to null to disable paste support:\r\n            pasteZone: $(document),\r\n\r\n            // The file input field(s), that are listened to for change events.\r\n            // If undefined, it is set to the file input fields inside\r\n            // of the widget element on plugin initialization.\r\n            // Set to null to disable the change listener.\r\n            picker: undefined,\r\n\r\n\r\n            // The parameter name for the file form data (the request argument name).\r\n            // If undefined or empty, the name property of the file input field is\r\n            // used, or \"files[]\" if the file input name property is also empty,\r\n            // can be a string or an array of strings:\r\n            paramName: undefined,\r\n            \r\n            // By default, each file of a selection is uploaded using an individual\r\n            // request for XHR type uploads. Set to false to upload file\r\n            // selections in one request each:\r\n            singleFileUploads: true,\r\n            \r\n            // To limit the number of files uploaded with one XHR request,\r\n            // set the following option to an integer greater than 0:\r\n            limitMultiFileUploads: undefined,\r\n            \r\n            // The following option limits the number of files uploaded with one\r\n            // XHR request to keep the request size under or equal to the defined\r\n            // limit in bytes:\r\n            limitMultiFileUploadSize: undefined,\r\n\r\n            // Multipart file uploads add a number of bytes to each uploaded file,\r\n            // therefore the following option adds an overhead for each file used\r\n            // in the limitMultiFileUploadSize configuration:\r\n            limitMultiFileUploadSizeOverhead: 512,\r\n\r\n            // Set the following option to true to issue all file upload requests\r\n            // in a sequential order:\r\n            sequentialUploads: false,\r\n            \r\n            // To limit the number of concurrent uploads,\r\n            // set the following option to an integer greater than 0:\r\n            limitConcurrentUploads: undefined,\r\n\r\n            // Set the following option to the location of a postMessage window,\r\n            // to enable postMessage transport uploads:\r\n            postMessage: undefined,\r\n \r\n            // By default, XHR file uploads are sent as multipart/form-data.\r\n            // The iframe transport is always using multipart/form-data.\r\n            // Set to false to enable non-multipart XHR uploads:\r\n            multipart: true,\r\n \r\n            // To upload large files in smaller chunks, set the following option\r\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n            // or the browser does not support the required Blob API, files will\r\n            // be uploaded as a whole.\r\n            maxChunkSize: undefined,\r\n \r\n            // When a non-multipart upload or a chunked multipart upload has been\r\n            // aborted, this option can be used to resume the upload by setting\r\n            // it to the size of the already uploaded bytes. This option is most\r\n            // useful when modifying the options object inside of the \"add\" or\r\n            // \"send\" callbacks, as the options are cloned for each file upload.\r\n            uploadedBytes: undefined,\r\n \r\n            // By default, failed (abort or error) file uploads are removed from the\r\n            // global progress calculation. Set the following option to false to\r\n            // prevent recalculating the global progress data:\r\n            recalculateProgress: true,\r\n \r\n            // Interval in milliseconds to calculate and trigger progress events:\r\n            progressInterval: 100,\r\n \r\n            // Interval in milliseconds to calculate progress bitrate:\r\n            bitrateInterval: 500,\r\n \r\n            // By default, uploads are started automatically when adding files:\r\n            autoUpload: false,\r\n\r\n            // Error and info messages:\r\n            messages: {\r\n                uploadedBytes: 'Uploaded bytes exceed file size'\r\n            },\r\n\r\n            // Translation function, gets the message key to be translated\r\n            // and an object with context specific data as arguments:\r\n            i18n: function (message, context) {\r\n                message = this.messages[message] || message.toString();\r\n                if (context) {\r\n                    langx.each(context, function (key, value) {\r\n                        message = message.replace('{' + key + '}', value);\r\n                    });\r\n                }\r\n                return message;\r\n            },\r\n\r\n            // Additional form data to be sent along with the file uploads can be set\r\n            // using this option, which accepts an array of objects with name and\r\n            // value properties, a function returning such an array, a FormData\r\n            // object (for XHR file uploads), or a simple object.\r\n            // The form of the first fileInput is given as parameter to the function:\r\n            formData: function (form) {\r\n                return form.serializeArray();\r\n            },\r\n\r\n            // The add callback is invoked as soon as files are added to the fileupload\r\n            // widget (via file input selection, drag & drop, paste or add API call).\r\n            // If the singleFileUploads option is enabled, this callback will be\r\n            // called once for each file in the selection for XHR file uploads, else\r\n            // once for each file selection.\r\n            //\r\n            // The upload starts when the submit method is invoked on the data parameter.\r\n            // The data object contains a files property holding the added files\r\n            // and allows you to override plugin options as well as define ajax settings.\r\n            //\r\n            // Listeners for this callback can also be bound the following way:\r\n            // .bind('fileuploadadd', func);\r\n            //\r\n            // data.submit() returns a Promise object and allows to attach additional\r\n            // handlers using jQuery's Deferred callbacks:\r\n            // data.submit().done(func).fail(func).always(func);\r\n            add: function (e, data) {\r\n                if (e.isDefaultPrevented()) {\r\n                    return false;\r\n                }\r\n                if (data.autoUpload || (data.autoUpload !== false && $(this).fileupload(\"instance\").option('autoUpload') )) {\r\n                    data.process().done(function () {\r\n                        data.submit();\r\n                    });\r\n                }\r\n            },\r\n\r\n            // Other callbacks:\r\n\r\n            // Callback for the submit event of each file upload:\r\n            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);\r\n\r\n            // Callback for the start of each file upload request:\r\n            // send: function (e, data) {}, // .bind('fileuploadsend', func);\r\n\r\n            // Callback for successful uploads:\r\n            // done: function (e, data) {}, // .bind('fileuploaddone', func);\r\n\r\n            // Callback for failed (abort or error) uploads:\r\n            // fail: function (e, data) {}, // .bind('fileuploadfail', func);\r\n\r\n            // Callback for completed (success, abort or error) requests:\r\n            // always: function (e, data) {}, // .bind('fileuploadalways', func);\r\n\r\n            // Callback for upload progress events:\r\n            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);\r\n\r\n            // Callback for global upload progress events:\r\n            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);\r\n\r\n            // Callback for uploads start, equivalent to the global ajaxStart event:\r\n            // start: function (e) {}, // .bind('fileuploadstart', func);\r\n\r\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\r\n            // stop: function (e) {}, // .bind('fileuploadstop', func);\r\n\r\n            // Callback for change events of the fileInput(s):\r\n            // change: function (e, data) {}, // .bind('fileuploadchange', func);\r\n\r\n            // Callback for paste events to the pasteZone(s):\r\n            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);\r\n\r\n            // Callback for drop events of the dropZone(s):\r\n            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);\r\n\r\n            // Callback for dragover events of the dropZone(s):\r\n            // dragover: function (e) {}, // .bind('fileuploaddragover', func);\r\n\r\n            // Callback for the start of each chunk upload request:\r\n            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);\r\n\r\n            // Callback for successful chunk uploads:\r\n            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);\r\n\r\n            // Callback for failed (abort or error) chunk uploads:\r\n            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);\r\n\r\n            // Callback for completed (success, abort or error) chunk upload requests:\r\n            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);\r\n\r\n            // The plugin options are used as settings object for the ajax calls.\r\n            // The following are jQuery ajax settings required for the file uploads:\r\n            processData: false,\r\n            contentType: false,\r\n            cache: false\r\n        },\r\n\r\n        // A list of options that require reinitializing event listeners and/or\r\n        // special initialization code:\r\n        _specialOptions: [\r\n            'picker',\r\n            'dropZone',\r\n            'pasteZone',\r\n            'multipart',\r\n            'filesContainer',\r\n            'uploadTemplateId',\r\n            'downloadTemplateId'            \r\n        ],\r\n\r\n        _BitrateTimer: function () {\r\n            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());\r\n            this.loaded = 0;\r\n            this.bitrate = 0;\r\n            this.getBitrate = function (now, loaded, interval) {\r\n                var timeDiff = now - this.timestamp;\r\n                if (!this.bitrate || !interval || timeDiff > interval) {\r\n                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\r\n                    this.loaded = loaded;\r\n                    this.timestamp = now;\r\n                }\r\n                return this.bitrate;\r\n            };\r\n        },\r\n\r\n        _getTotal: function (files) {\r\n            var total = 0;\r\n            langx.each(files, function (index, file) {\r\n                total += file.size || 1;\r\n            });\r\n            return total;\r\n        },\r\n\r\n        _initProgressObject: function (obj) {\r\n            var progress = {\r\n                loaded: 0,\r\n                total: 0,\r\n                bitrate: 0\r\n            };\r\n            if (obj._progress) {\r\n                langx.extend(obj._progress, progress);\r\n            } else {\r\n                obj._progress = progress;\r\n            }\r\n        },\r\n\r\n        _initResponseObject: function (obj) {\r\n            var prop;\r\n            if (obj._response) {\r\n                for (prop in obj._response) {\r\n                    if (obj._response.hasOwnProperty(prop)) {\r\n                        delete obj._response[prop];\r\n                    }\r\n                }\r\n            } else {\r\n                obj._response = {};\r\n            }\r\n        },\r\n\r\n        _onProgress: function (e, data) {\r\n            if (e.lengthComputable) {\r\n                var now = ((Date.now) ? Date.now() : (new Date()).getTime()),\r\n                    loaded;\r\n                if (data._time && data.progressInterval &&\r\n                        (now - data._time < data.progressInterval) &&\r\n                        e.loaded !== e.total) {\r\n                    return;\r\n                }\r\n                data._time = now;\r\n                loaded = Math.floor(\r\n                    e.loaded / e.total * (data.chunkSize || data._progress.total)\r\n                ) + (data.uploadedBytes || 0);\r\n                // Add the difference from the previously loaded state\r\n                // to the global loaded counter:\r\n                this._progress.loaded += (loaded - data._progress.loaded);\r\n                this._progress.bitrate = this._bitrateTimer.getBitrate(\r\n                    now,\r\n                    this._progress.loaded,\r\n                    data.bitrateInterval\r\n                );\r\n                data._progress.loaded = data.loaded = loaded;\r\n                data._progress.bitrate = data.bitrate = data._bitrateTimer.getBitrate(\r\n                    now,\r\n                    loaded,\r\n                    data.bitrateInterval\r\n                );\r\n                // Trigger a custom progress event with a total data property set\r\n                // to the file size(s) of the current upload and a loaded data\r\n                // property calculated accordingly:\r\n                this._trigger(\r\n                    'progress',\r\n                    eventer.create('progress', {delegatedEvent: e}),\r\n                    data\r\n                );\r\n                // Trigger a global progress event for all current file uploads,\r\n                // including ajax calls queued for sequential file uploads:\r\n                this._trigger(\r\n                    'progressall',\r\n                    eventer.create('progressall', {delegatedEvent: e}),\r\n                    this._progress\r\n                );\r\n            }\r\n        },\r\n\r\n        _getParamName: function (options) {\r\n            var picker = $(options.picker),\r\n                paramName = options.paramName;\r\n            //if (!paramName) {\r\n            //    paramName = [fileInput.prop('name') || 'files[]'];\r\n            // } else if (!langx.isArray(paramName)) {\r\n\r\n            if (!langx.isArray(paramName)) {\r\n                paramName = [paramName];\r\n            }\r\n            return paramName;\r\n        },\r\n\r\n\r\n        // jQuery 1.6 doesn't provide .state(),\r\n        // while jQuery 1.8+ removed .isRejected() and .isResolved():\r\n        _getDeferredState: function (deferred) {\r\n            if (deferred.state) {\r\n                return deferred.state();\r\n            }\r\n            if (deferred.isResolved()) {\r\n                return 'resolved';\r\n            }\r\n            if (deferred.isRejected()) {\r\n                return 'rejected';\r\n            }\r\n            return 'pending';\r\n        },\r\n\r\n        // Maps jqXHR callbacks to the equivalent\r\n        // methods of the given Promise object:\r\n        _enhancePromise: function (promise) {\r\n            promise.success = promise.done;\r\n            promise.error = promise.fail;\r\n            promise.complete = promise.always;\r\n            return promise;\r\n        },\r\n\r\n        // Creates and returns a Promise object enhanced with\r\n        // the jqXHR methods abort, success, error and complete:\r\n        _getXHRPromise: function (resolveOrReject, context, args) {\r\n            var dfd = new Deferred(),\r\n                promise = dfd.promise;\r\n            context = context || this.options.context || promise;\r\n            if (resolveOrReject === true) {\r\n                dfd.resolveWith(context, args);\r\n            } else if (resolveOrReject === false) {\r\n                dfd.rejectWith(context, args);\r\n            }\r\n            promise.abort = dfd.promise;\r\n            return this._enhancePromise(promise);\r\n        },\r\n\r\n        // Adds convenience methods to the data callback argument:\r\n        _addConvenienceMethods: function (e, data) {\r\n            var that = this,\r\n                getPromise = function (args) {\r\n                    return new Deferred().resolveWith(that, args).promise;\r\n                };\r\n            data.process = function (resolveFunc, rejectFunc) {\r\n                if (resolveFunc || rejectFunc) {\r\n                    data._processQueue = this._processQueue =\r\n                        (this._processQueue || getPromise([this])).pipe(\r\n                            function () {\r\n                                if (data.errorThrown) {\r\n                                    return new Deferred()\r\n                                        .rejectWith(that, [data]).promise;\r\n                                }\r\n                                return getPromise(arguments);\r\n                            }\r\n                        ).pipe(resolveFunc, rejectFunc);\r\n                }\r\n                return this._processQueue || getPromise([this]);\r\n            };\r\n            data.submit = function () {\r\n                if (this.state() !== 'pending') {\r\n                    data.jqXHR = this.jqXHR =\r\n                        (that._trigger(\r\n                            'submit',\r\n                            eventer.create('submit', {delegatedEvent: e}),\r\n                            this\r\n                        ) !== false) && that._onSend(e, this);\r\n                }\r\n                return this.jqXHR || that._getXHRPromise();\r\n            };\r\n            data.abort = function () {\r\n                if (this.jqXHR) {\r\n                    return this.jqXHR.abort();\r\n                }\r\n                this.errorThrown = 'abort';\r\n                that._trigger('fail', null, this);\r\n                return that._getXHRPromise(false);\r\n            };\r\n            data.state = function () {\r\n                if (this.jqXHR) {\r\n                    return that._getDeferredState(this.jqXHR);\r\n                }\r\n                if (this._processQueue) {\r\n                    return that._getDeferredState(this._processQueue);\r\n                }\r\n            };\r\n            data.processing = function () {\r\n                return !this.jqXHR && this._processQueue && that\r\n                    ._getDeferredState(this._processQueue) === 'pending';\r\n            };\r\n            data.progress = function () {\r\n                return this._progress;\r\n            };\r\n            data.response = function () {\r\n                return this._response;\r\n            };\r\n        },\r\n\r\n        _beforeSend: function (e, data) {\r\n            if (this._active === 0) {\r\n                // the start callback is triggered when an upload starts\r\n                // and no other uploads are currently running,\r\n                // equivalent to the global ajaxStart event:\r\n                this._trigger('start');\r\n                // Set timer for global bitrate progress calculation:\r\n                this._bitrateTimer = new this._BitrateTimer();\r\n                // Reset the global progress values:\r\n                this._progress.loaded = this._progress.total = 0;\r\n                this._progress.bitrate = 0;\r\n            }\r\n            // Make sure the container objects for the .response() and\r\n            // .progress() methods on the data object are available\r\n            // and reset to their initial state:\r\n            this._initResponseObject(data);\r\n            this._initProgressObject(data);\r\n            data._progress.loaded = data.loaded = data.uploadedBytes || 0;\r\n            data._progress.total = data.total = this._getTotal(data.files) || 1;\r\n            data._progress.bitrate = data.bitrate = 0;\r\n            this._active += 1;\r\n            // Initialize the global progress values:\r\n            this._progress.loaded += data.loaded;\r\n            this._progress.total += data.total;\r\n        },\r\n\r\n        _onDone: function (result, textStatus, jqXHR, options) {\r\n            var total = options._progress.total,\r\n                response = options._response;\r\n            if (options._progress.loaded < total) {\r\n                // Create a progress event if no final progress event\r\n                // with loaded equaling total has been triggered:\r\n                this._onProgress(eventer.create('progress', {\r\n                    lengthComputable: true,\r\n                    loaded: total,\r\n                    total: total\r\n                }), options);\r\n            }\r\n            response.result = options.result = result;\r\n            response.textStatus = options.textStatus = textStatus;\r\n            response.jqXHR = options.jqXHR = jqXHR;\r\n            this._trigger('done', null, options);\r\n        },\r\n\r\n        _onFail: function (jqXHR, textStatus, errorThrown, options) {\r\n            var response = options._response;\r\n            if (options.recalculateProgress) {\r\n                // Remove the failed (error or abort) file upload from\r\n                // the global progress calculation:\r\n                this._progress.loaded -= options._progress.loaded;\r\n                this._progress.total -= options._progress.total;\r\n            }\r\n            response.jqXHR = options.jqXHR = jqXHR;\r\n            response.textStatus = options.textStatus = textStatus;\r\n            response.errorThrown = options.errorThrown = errorThrown;\r\n            this._trigger('fail', null, options);\r\n        },\r\n\r\n        _trigger : function(type,event,data) {\r\n            var e = eventer.proxy(event);\r\n            e.type = type;\r\n            e.data =data;\r\n            return this.trigger(e,data);\r\n        },\r\n\r\n        _onAlways: function (jqXHRorResult, textStatus, jqXHRorError, options) {\r\n            // jqXHRorResult, textStatus and jqXHRorError are added to the\r\n            // options object via done and fail callbacks\r\n            this._trigger('always', null, options);\r\n        },\r\n\r\n        _onSend: function (e, data) {\r\n            if (!data.submit) {\r\n                this._addConvenienceMethods(e, data);\r\n            }\r\n            var that = this,\r\n                jqXHR,\r\n                aborted,\r\n                slot,\r\n                pipe,\r\n                send = function () {\r\n                    that._sending += 1;\r\n                    data.url = that.options.url;\r\n                    data.dataType = that.options.dataType;\r\n                    data.xhrFields = that.options.xhrFields;\r\n\r\n                    jqXHR = upload(data);\r\n\r\n                    jqXHR.progress(function(e){\r\n                        //var oe = e.originalEvent;\r\n                        // Make sure the progress event properties get copied over:\r\n                        //e.lengthComputable = oe.lengthComputable;\r\n                        //e.loaded = oe.loaded;\r\n                        //e.total = oe.total;\r\n                        that._onProgress(e, jqXHR.options);\r\n\r\n                    }).done(function (result, textStatus) {\r\n                        that._onDone(result, textStatus, jqXHR, jqXHR.options);\r\n                    }).fail(function (e, textStatus) {\r\n                        that._onFail(jqXHR, textStatus,e, jqXHR.options);\r\n                    }).always(function () {\r\n                        that._sending -= 1;\r\n                        that._active -= 1;\r\n                        that._trigger('stop');\r\n                    });\r\n                    return jqXHR;\r\n                };\r\n            this._beforeSend(e, data);\r\n\r\n            return send();\r\n        },\r\n        _onAdd: function (e, data) {\r\n            var that = this,\r\n                result = true,\r\n                options = langx.extend({}, this.options, data),\r\n                files = data.files,\r\n                filesLength = files.length,\r\n                limit = options.limitMultiFileUploads,\r\n                limitSize = options.limitMultiFileUploadSize,\r\n                overhead = options.limitMultiFileUploadSizeOverhead,\r\n                batchSize = 0,\r\n                paramName = this._getParamName(options),\r\n                paramNameSet,\r\n                paramNameSlice,\r\n                fileSet,\r\n                i,\r\n                j = 0;\r\n            if (limitSize && (!filesLength || files[0].size === undefined)) {\r\n                limitSize = undefined;\r\n            }\r\n            if (!(options.singleFileUploads || limit || limitSize)) {\r\n                fileSet = [files];\r\n                paramNameSet = [paramName];\r\n            } else if (!(options.singleFileUploads || limitSize) && limit) {\r\n                fileSet = [];\r\n                paramNameSet = [];\r\n                for (i = 0; i < filesLength; i += limit) {\r\n                    fileSet.push(files.slice(i, i + limit));\r\n                    paramNameSlice = paramName.slice(i, i + limit);\r\n                    if (!paramNameSlice.length) {\r\n                        paramNameSlice = paramName;\r\n                    }\r\n                    paramNameSet.push(paramNameSlice);\r\n                }\r\n            } else if (!options.singleFileUploads && limitSize) {\r\n                fileSet = [];\r\n                paramNameSet = [];\r\n                for (i = 0; i < filesLength; i = i + 1) {\r\n                    batchSize += files[i].size + overhead;\r\n                    if (i + 1 === filesLength ||\r\n                            ((batchSize + files[i + 1].size + overhead) > limitSize) ||\r\n                            (limit && i + 1 - j >= limit)) {\r\n                        fileSet.push(files.slice(j, i + 1));\r\n                        paramNameSlice = paramName.slice(j, i + 1);\r\n                        if (!paramNameSlice.length) {\r\n                            paramNameSlice = paramName;\r\n                        }\r\n                        paramNameSet.push(paramNameSlice);\r\n                        j = i + 1;\r\n                        batchSize = 0;\r\n                    }\r\n                }\r\n            } else {\r\n                paramNameSet = paramName;\r\n            }\r\n            data.originalFiles = files;\r\n            langx.each(fileSet || files, function (index, element) {\r\n                var newData = langx.extend({}, data);\r\n                newData.files = fileSet ? element : [element];\r\n                newData.paramName = paramNameSet[index];\r\n                that._initResponseObject(newData);\r\n                that._initProgressObject(newData);\r\n                that._addConvenienceMethods(e, newData);\r\n                result = that._trigger(\r\n                    'add',\r\n                    eventer.create('add', {delegatedEvent: e}),\r\n                    newData\r\n                );\r\n                return result;\r\n            });\r\n            return result;\r\n        },\r\n\r\n        _initEventHandlers: function () {\r\n            var that = this;\r\n\r\n            dropzone(this.options.dropZone[0],{\r\n                dropped : function (files) {\r\n                    var data = {};\r\n                    data.files = files;\r\n                    that._onAdd(null, data);\r\n                }\r\n            });\r\n\r\n            pastezone(this.options.pasteZone[0],{\r\n                pasted : function (files) {\r\n                    var data = {};\r\n                    data.files = files;\r\n                    that._onAdd(null, data);\r\n                }\r\n            });\r\n\r\n            picker(this.options.picker[0],{\r\n                multiple: true,\r\n                picked : function (files) {\r\n                    var data = {};\r\n                    data.files = files;\r\n                    that._onAdd(null, data);\r\n                }\r\n            });\r\n        },\r\n\r\n        _destroyEventHandlers: function () {\r\n            //this._off(this.options.dropZone, 'dragover drop');\r\n            //this._off(this.options.pasteZone, 'paste');\r\n            //this._off(this.options.picker, 'change');\r\n        },\r\n\r\n        _setOption: function (key, value) {\r\n            var reinit = langx.inArray(key, this._specialOptions) !== -1;\r\n            if (reinit) {\r\n                this._destroyEventHandlers();\r\n            }\r\n            this._super(key, value);\r\n            if (reinit) {\r\n                this._initSpecialOptions();\r\n                this._initEventHandlers();\r\n            }\r\n        },\r\n\r\n        _initSpecialOptions: function () {\r\n            var options = this.options;\r\n            //if (options.fileInput === undefined) {\r\n            //    //options.fileInput = this.element.is('input[type=\"file\"]') ?\r\n            //    //        this.element : this.element.find('input[type=\"file\"]');\r\n            //    options.fileInput = this.element.find('.fileinput-button');\r\n            \r\n            if (options.picker) {\r\n                if (!(options.picker instanceof $)) {\r\n                    options.picker = $(options.picker,this._elm);\r\n                }                \r\n            }\r\n\r\n            if (options.dropZone) {\r\n                if (!(options.dropZone instanceof $)) {\r\n                    options.dropZone = $(options.dropZone,this._elm);\r\n                }\r\n            }\r\n\r\n            if (options.pasteZone) {\r\n                if (!(options.pasteZone instanceof $)) {\r\n                    options.pasteZone = $(options.pasteZone,this._elm);\r\n                }                \r\n            }\r\n        },\r\n\r\n        _getRegExp: function (str) {\r\n            var parts = str.split('/'),\r\n                modifiers = parts.pop();\r\n            parts.shift();\r\n            return new RegExp(parts.join('/'), modifiers);\r\n        },\r\n\r\n        _isRegExpOption: function (key, value) {\r\n            return key !== 'url' && langx.type(value) === 'string' &&\r\n                /^\\/.*\\/[igm]{0,3}$/.test(value);\r\n        },\r\n\r\n        _construct: function (elm,options) {\r\n            this._elm = elm;\r\n            this.options = langx.mixin({},this.options,options);\r\n            this._initSpecialOptions();\r\n            this._slots = [];\r\n            this._sequence = this._getXHRPromise(true);\r\n            this._sending = this._active = 0;\r\n            this._initProgressObject(this);\r\n            this._initEventHandlers();\r\n        },\r\n\r\n        // This method is exposed to the widget API and allows to query\r\n        // the number of active uploads:\r\n        active: function () {\r\n            return this._active;\r\n        },\r\n\r\n        // This method is exposed to the widget API and allows to query\r\n        // the widget upload progress.\r\n        // It returns an object with loaded, total and bitrate properties\r\n        // for the running uploads:\r\n        progress: function () {\r\n            return this._progress;\r\n        },\r\n\r\n        // This method is exposed to the widget API and allows adding files\r\n        // using the fileupload API. The data parameter accepts an object which\r\n        // must have a files property and can contain additional options:\r\n        // .fileupload('add', {files: filesList});\r\n        add: function (data) {\r\n            var that = this;\r\n            if (!data || this.options.disabled) {\r\n                return;\r\n            }\r\n            data.files = langx.makeArray(data.files);\r\n            this._onAdd(null, data);\r\n        },\r\n\r\n        // This method is exposed to the widget API and allows sending files\r\n        // using the fileupload API. The data parameter accepts an object which\r\n        // must have a files or fileInput property and can contain additional options:\r\n        // .fileupload('send', {files: filesList});\r\n        // The method returns a Promise object for the file upload call.\r\n        send: function (data) {\r\n            if (data && !this.options.disabled) {\r\n                data.files = langx.makeArray(data.files);\r\n                if (data.files.length) {\r\n                    return this._onSend(null, data);\r\n                }\r\n            }\r\n            return this._getXHRPromise(false, data && data.context);\r\n        }\r\n\r\n    });\r\n\r\n\r\n    function uploader(elm,options) {\r\n        var fuInst = new FileUploader(elm,options);\r\n        fuInst.on(\"all\",function(evt,data){\r\n            var typ = evt.type;\r\n            if (langx.isFunction(options[typ])) {\r\n                options[typ].call(fuInst._elm,evt,data);\r\n            }\r\n        });\r\n        return fuInst;\r\n    }\r\n\r\n    return diskfs.uploader = uploader;\r\n\r\n});\r\n\ndefine('skylark-storages-diskfs/main',[\r\n\t\"./diskfs\",\r\n\t\"./download\",\r\n\t\"./dropzone\",\r\n\t\"./pastezone\",\r\n\t\"./picker\",\r\n\t\"./read\",\r\n\t\"./select\",\r\n\t\"./upload\",\r\n\t\"./uploader\",\r\n\t\"./webentry\"\r\n],function(diskfs){\r\n\treturn diskfs;\r\n});\ndefine('skylark-storages-diskfs', ['skylark-storages-diskfs/main'], function (main) { return main; });\n\n"]}